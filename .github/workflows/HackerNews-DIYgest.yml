name: HackerNews DIYgest

env:
  TARGET_HOUR: "08"
  TIMEZONE: "Asia/Bangkok"
  PSQLURL: ${{ secrets.PSQLURL }}

on:
  schedule:
    # every 15 mins run the workflow, collecting stories through the day
    - cron: "0,15,30,45 * * * *"

  workflow_dispatch:
    inputs:
      send-email:
        description: Email target hour override?
        default: "no thanks"
        type: choice
        options:
          - "yes please"
          - "no thanks"
#       debugging:
#         description: Enable remote debugging?
#         default: "no thanks"
#         type: choice
#         options:
#           - "yes please"
#           - "no thanks"

jobs:
  Hacker-News-DIYgest-Hourly-Scrape:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install and cache Python deps
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip' # caching pip dependencies
      - run: pip install -r requirements.txt

      - name: Install and cache apt-get deps
        uses: tecolicom/actions-use-apt-tools@v1
        with:
          tools: markdown postgresql-client
          method: timestamp
          key: apt-get-cache

      - name: Cache Go deps
        uses: gacts/setup-go-with-cache@v1
        with:
          go-version: 1.19

      - name: Install mustache-cli (golang dep)
        run: go install github.com/cbroglie/mustache/cmd/mustache@latest

#       - name: Setup tmate session
#         if: inputs.debugging == 'yes please' && github.event_name == 'workflow_dispatch'
#         uses: mxschmitt/action-tmate@v3
#         with:
#           timeout-minutes: 1
#           limit-access-to-actor: true

      - name: Scrape
        run: bin/hn-hourly-scrape-pg.py

      - name: Review Current Top Stories
        run: |
          bin/stories.markdown.sh >> "$GITHUB_STEP_SUMMARY"

      - name: Compose subject line
        run: bin/compose-subject-line.sh

      - name: Compose email payload
        run: |
          stories=$(bin/stories.json.sh)
          prettydate="$(TZ=$TIMEZONE date "+%A, %d %b %Y")"
          exactdatetime="$(TZ=$TIMEZONE date "+%Y-%m-%d %H:%M:%S")"

          echo "{
            \"stories\": ${stories},
            \"prettydate\":\"${prettydate}\",
            \"exactdatetime\":\"${exactdatetime}\"
          }" \
          | mustache mustache/hackernews.diyjest.mustache.html > digest.html

          cat <<HERE > digest.plaintext
          HackerNews top 30 stories of ${prettydate}

          $(bin/stories.plaintext.sh)

          Generated at ${exactdatetime} - https://github.com/codefodder/HackerNews-DIYgest
          HERE

      - name: 'Should we send the mail now?'
        run: |

          HOUR_NOW=$(TZ=$TIMEZONE date +%H)
          TODAY=$(TZ=$TIMEZONE date +%Y%m%d)
          EMAIL_SENT_TODAY=$(bin/email-already-sent-today.sh ${TODAY})

          if [[ "${{ inputs.send-email }}" == 'yes please' ]]; then
            TARGET_HOUR="$HOUR_NOW"
            echo "Override target hour: $TARGET_HOUR"
            echo "TARGET_HOUR=$TARGET_HOUR" >> "$GITHUB_ENV"
          fi

          if [[ "$TARGET_HOUR" == "$HOUR_NOW" && "$EMAIL_SENT_TODAY" == "0" ]]; then
            SEND_MAIL="true"
          else
            SEND_MAIL="false"
          fi

          echo "SEND_MAIL=${SEND_MAIL}" >> "$GITHUB_ENV"

          cat <<DEBUG_EMAIL_SCHEDULE >> "$GITHUB_STEP_SUMMARY"

          Email schedule info

          - Email(s) Sent Today: ${EMAIL_SENT_TODAY}
          - Today: ${TODAY}
          - Timezone: ${TIMEZONE}
          - Target Hour: ${TARGET_HOUR}
          - Current Hour: ${HOUR_NOW}
          - SEND_MAIL: ${SEND_MAIL}

          DEBUG_EMAIL_SCHEDULE

      - name: Debug SEND_MAIL
        run: |
          cat <<DEBUG >> "$GITHUB_STEP_SUMMARY"

          # Debug SEND_MAIL

          - env.SEND_MAIL: ${{ env.SEND_MAIL }}
          - env.SEND_MAIL == 'true'?: ${{ env.SEND_MAIL == 'true' }}

          DEBUG

      - name: Email HackerNews DIYgest
        id: sending_email
        if: env.SEND_MAIL == 'true'
        uses: dawidd6/action-send-mail@v3
        with:
          subject: ${{ env.SUBJECT_LINE }}
          from: HackerNews DIYgest
          to: ${{secrets.EMAIL_RECIPIENT}}
          username: ${{secrets.GMAIL_USER}}
          password: ${{secrets.GM_APPWRD}}
          body: file://digest.plaintext
          html_body: file://digest.html
          server_address: smtp.gmail.com
          server_port: 465
          secure: true
          ignore_cert: true
          priority: high

      - name: 'Event log - emailSent'
        if: ${{ success() }}
        run: |
          today=$(TZ=$TIMEZONE date +%Y%m%d)
          bin/email-sent-event.sh $today
