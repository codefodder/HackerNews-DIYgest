name: Hourly Scrape

on:
  workflow_dispatch:
  schedule:
    - cron: "0 * * * *"

jobs:
  scrape:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Fetch database
        env:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        run: |
           gh auth login --with-token <<<$ACCESS_TOKEN
           asset=$(gh api /repos/codefodder/hacker-news-digest/actions/artifacts --jq ".artifacts[0] .archive_download_url")
           curl -L -s -o artifact.zip "$asset" \
           -H "Accept: application/vnd.github.v3+json" \
           -H "Authorization: Bearer $ACCESS_TOKEN"
           unzip artifact.zip

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Scrape Hacker News
        run: bin/hn-hourly-scrape.py

      - name: Review database
        run: |
          sqlite3 hn.db "SELECT title, link FROM stories
          ORDER BY CAST(REPLACE(score,' points','') AS INTEGER) DESC, CAST(SUBSTR(datetime, 1, 10) AS INTEGER) DESC"

          echo "# HackerNews Diygest\n\n$(date "+%Y-%m-%d")\n\n" > stories.md

          sqlite3 hn.db "SELECT '- ['' || title || '](' || link || ')
            - ' || score || ' [comments]('|| comment_url || ')'
          FROM stories
          ORDER BY CAST(REPLACE(score,' points','') AS INTEGER) DESC, CAST(SUBSTR(datetime, 1, 10) AS INTEGER) DESC" >> stories.md

          # -- LIMIT 30;
          # -- WHERE datetime(datetime, '+7 hours') BETWEEN date('now', '-1 day', '+7 hours') AND date('now', 'start of day', '+1 day', '+7 hours')

      - name: Email Digest
        uses: dawidd6/action-send-mail@v3
        with:
          # Required mail server address if not connection_url:
          server_address: smtp.gmail.com
          # Server port, default 25:
          server_port: 465
          # Optional whether this connection use TLS (default is true if server_port is 465)
          secure: true
          # Optional (recommended) mail server username:
          username: jasonm23@gmail.com
          # Optional (recommended) mail server password:
          password: ${{secrets.GM_APPWRD}}
          # Required mail subject:
          subject: HackerNews Diygest
          # Required recipients' addresses:
          to: jasonm23@gmail.com
          # Required sender full name (address can be skipped):
          from: Jason M <jasonm23@gmail.com>
          # Optional plain body:
          body: file://stories.md
          # Optional HTML body read from file:
          html_body: file://stories.md
          ignore_cert: true
          # Optional converting Markdown to HTML (set content_type to text/html too):
          convert_markdown: true
          # Optional attachments:
          attachments: hn.db
          # Optional priority: 'high', 'normal' (default) or 'low'
          priority: low

      - name: Upload database artifact
        uses: actions/upload-artifact@v2
        with:
          name: hackernews-database
          path: hn.db
